<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.astefanutti.camel.cdi</groupId>
        <artifactId>camel-cdi-parent</artifactId>
        <version>1.2-SNAPSHOT</version>
    </parent>

    <artifactId>camel-cdi-samples</artifactId>
    <name>Camel CDI :: Samples</name>
    <packaging>pom</packaging>

    <properties>
        <packaging.type>jar</packaging.type>
    </properties>

    <modules>
        <module>hello</module>
        <module>properties</module>
        <module>sjms</module>
    </modules>

    <build>
        <plugins>
            <!-- Java SE - Maven Exec Plugin -->
            <!-- TODO: the Exec Maven plugin exec goal parent process does not wait for the child process to exit when the JVM terminates in response to a user interrupt, such as typing ^C. That leads to the child process logs not being streamed back to the parent process stream handler. See https://github.com/mojohaus/exec-maven-plugin/issues/9 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <configuration>
                    <executable>java</executable>
                    <arguments>
                        <argument>${arguments}</argument>
                        <argument>-classpath</argument>
                        <classpath/>
                        <argument>org.apache.camel.cdi.Main</argument>
                    </arguments>
                </configuration>
            </plugin>

            <!-- Java SE - Camel Maven Plugin -->
            <plugin>
                <groupId>io.astefanutti.camel.cdi</groupId>
                <artifactId>camel-maven-plugin</artifactId>
                <version>${project.version}</version>
                <configuration>
                    <useCDI>true</useCDI>
                </configuration>
            </plugin>

            <!-- Java SE - HawtIO Maven Plugin -->
            <plugin>
                <groupId>io.hawt</groupId>
                <artifactId>hawtio-maven-plugin</artifactId>
                <configuration>
                    <mainClass>org.apache.camel.cdi.Main</mainClass>
                    <openWebConsoleDelay>5</openWebConsoleDelay>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>standalone</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>

                <!-- Java EE API -->
                <dependency>
                    <groupId>javax</groupId>
                    <artifactId>javaee-api</artifactId>
                    <scope>runtime</scope>
                </dependency>

                <!-- Logging -->
                <dependency>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-slf4j-impl</artifactId>
                    <scope>runtime</scope>
                </dependency>

                <dependency>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-core</artifactId>
                    <scope>runtime</scope>
                </dependency>

            </dependencies>
            <build>
                <plugins>
                    <!-- FIXME: this is required for the Camel Maven plugin that resolve the Camel CDI POM as artifact of type bundle though that should not be mandate for plain Java SE usage of Camel CDI -->
                    <plugin>
                        <groupId>org.apache.felix</groupId>
                        <artifactId>maven-bundle-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>weld</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.apache.deltaspike.cdictrl</groupId>
                    <artifactId>deltaspike-cdictrl-weld</artifactId>
                    <scope>runtime</scope>
                </dependency>

                <dependency>
                    <groupId>org.jboss.weld.se</groupId>
                    <artifactId>weld-se-core</artifactId>
                    <scope>runtime</scope>
                </dependency>

                <dependency>
                    <groupId>org.jboss.weld</groupId>
                    <artifactId>weld-core-impl</artifactId>
                    <scope>runtime</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>owb</id>
            <properties>
                <!-- Required to configured JUL used by OWB -->
                <arguments>-Djava.util.logging.config.file=${project.basedir}/src/main/resources/logging.properties</arguments>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.apache.deltaspike.cdictrl</groupId>
                    <artifactId>deltaspike-cdictrl-owb</artifactId>
                    <scope>runtime</scope>
                </dependency>

                <dependency>
                    <groupId>org.apache.openwebbeans</groupId>
                    <artifactId>openwebbeans-impl</artifactId>
                    <scope>runtime</scope>
                </dependency>

                <dependency>
                    <groupId>org.slf4j</groupId>
                    <artifactId>jul-to-slf4j</artifactId>
                    <scope>runtime</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>bundle</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <packaging.type>bundle</packaging.type>
                <camel.osgi.dynamic />
                <camel.osgi.export.pkg />
                <camel.osgi.import.pkg>*</camel.osgi.import.pkg>
                <camel.osgi.private.pkg>org.apache.camel.cdi.sample.*</camel.osgi.private.pkg>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.felix</groupId>
                        <artifactId>maven-bundle-plugin</artifactId>
                        <configuration>
                            <instructions>
                                <Bundle-Name>${project.name}</Bundle-Name>
                                <Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
                                <Export-Package>${camel.osgi.export.pkg}</Export-Package>
                                <Import-Package>${camel.osgi.import.pkg}</Import-Package>
                                <Require-Capability>
                                    osgi.extender; filter:="(osgi.extender=pax.cdi)",
                                    org.ops4j.pax.cdi.extension; filter:="(extension=camel-cdi-extension)"
                                </Require-Capability>
                                <DynamicImport-Package>${camel.osgi.dynamic}</DynamicImport-Package>
                                <Private-Package>${camel.osgi.private.pkg}</Private-Package>
                                <Implementation-Title>Apache Camel CDI :: Karaf Example</Implementation-Title>
                                <Implementation-Version>${project.version}</Implementation-Version>
                                <Karaf-Info>Camel;${project.artifactId}=${project.version}</Karaf-Info>
                            </instructions>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
